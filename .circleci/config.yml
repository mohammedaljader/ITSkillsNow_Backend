version: 2.1

jobs:
  build:
    docker:
      - image: cimg/openjdk:17.0
    parallelism: 4
    steps:
      - checkout
      - run:
          name: Build_CourseService
          command: mvn -f ITSkillsNow/course-service -B -DskipTests clean package

      - run:
          name: Build_JobService
          command: mvn -f ITSkillsNow/job-service -B -DskipTests clean package

      - run:
          name: Build_AuthService
          command: mvn -f ITSkillsNow/auth-service -B -DskipTests clean package

      - run:
          name: Build_UserService
          command: mvn -f ITSkillsNow/user-service -B -DskipTests clean package

      - run:
          name: Build_APIGateway
          command: mvn -f ITSkillsNow/api-gateway -B -DskipTests clean package

  build-and-push-course-service:
    docker:
      - image: cimg/openjdk:17.0
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build Java Maven project
          command: |
            cd ITSkillsNow/course-service
            mvn clean package -DskipTests
      - run:
          name: Build Docker image for course-service
          command: |
            cd ITSkillsNow/course-service
            docker build -f Dockerfile . -t mohammedaljader2000/course-service
      - deploy:
          name: Push Docker image for course-service to registry
          command: |
            docker login -u "${DOCKERHUB_USERNAME}" -p "${DOCKERHUB_PASSWORD}"
            docker push mohammedaljader2000/course-service
  
   build-and-push-job-service:
    docker:
      - image: cimg/openjdk:17.0
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build Java Maven project
          command: |
            cd ITSkillsNow/job-service
            mvn clean package -DskipTests
      - run:
          name: Build Docker image for job-service
          command: |
            cd ITSkillsNow/job-service
            docker build -f Dockerfile . -t mohammedaljader2000/job-service
      - deploy:
          name: Push Docker image for job-service to registry
          command: |
            docker login -u "${DOCKERHUB_USERNAME}" -p "${DOCKERHUB_PASSWORD}"
            docker push mohammedaljader2000/job-service
   
   build-and-push-auth-service:
    docker:
      - image: cimg/openjdk:17.0
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build Java Maven project
          command: |
            cd ITSkillsNow/auth-service
            mvn clean package -DskipTests
      - run:
          name: Build Docker image for auth-service
          command: |
            cd ITSkillsNow/auth-service
            docker build -f Dockerfile . -t mohammedaljader2000/auth-service
      - deploy:
          name: Push Docker image for auth-service to registry
          command: |
            docker login -u "${DOCKERHUB_USERNAME}" -p "${DOCKERHUB_PASSWORD}"
            docker push mohammedaljader2000/auth-service
   
   build-and-push-user-service:
    docker:
      - image: cimg/openjdk:17.0
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build Java Maven project
          command: |
            cd ITSkillsNow/user-service
            mvn clean package -DskipTests
      - run:
          name: Build Docker image for user-service
          command: |
            cd ITSkillsNow/user-service
            docker build -f Dockerfile . -t mohammedaljader2000/user-service
      - deploy:
          name: Push Docker image for user-service to registry
          command: |
            docker login -u "${DOCKERHUB_USERNAME}" -p "${DOCKERHUB_PASSWORD}"
            docker push mohammedaljader2000/user-service
  
   build-and-push-apigateway:
    docker:
      - image: cimg/openjdk:17.0
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build Java Maven project
          command: |
            cd ITSkillsNow/api-gateway
            mvn clean package -DskipTests
      - run:
          name: Build Docker image for apigateway
          command: |
            cd ITSkillsNow/api-gateway
            docker build -f Dockerfile . -t mohammedaljader2000/gateway
      - deploy:
          name: Push Docker image for apigateway to registry
          command: |
            docker login -u "${DOCKERHUB_USERNAME}" -p "${DOCKERHUB_PASSWORD}"
            docker push mohammedaljader2000/gateway
  
   build-and-push-discovery-server:
    docker:
      - image: cimg/openjdk:17.0
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build Java Maven project
          command: |
            cd ITSkillsNow/discovery-server
            mvn clean package -DskipTests
      - run:
          name: Build Docker image for discovery-server
          command: |
            cd ITSkillsNow/discovery-server
            docker build -f Dockerfile . -t mohammedaljader2000/discovery-server
      - deploy:
          name: Push Docker image for discovery-server to registry
          command: |
            docker login -u "${DOCKERHUB_USERNAME}" -p "${DOCKERHUB_PASSWORD}"
            docker push mohammedaljader2000/discovery-server
  
  unit_tests:
    docker:
      - image: cimg/openjdk:17.0
    parallelism: 4
    steps:
      - checkout
      - run:
          name: Test_CourseService
          command: mvn -f ITSkillsNow/course-service test

      - run:
          name: Test_JobService
          command: mvn -f ITSkillsNow/job-service test

      - run:
          name: Test_AuthService
          command: mvn -f ITSkillsNow/auth-service test

      - run:
          name: Test_UserService
          command: mvn -f ITSkillsNow/user-service test

  integration_tests:
    docker:
      - image: cimg/openjdk:17.0
    parallelism: 4
    steps:
      - checkout
      - run:
          name: Test_CourseService
          command: mvn -f ITSkillsNow/course-service failsafe:integration-test

      - run:
          name: Test_JobService
          command: mvn -f ITSkillsNow/job-service failsafe:integration-test

      - run:
          name: Test_AuthService
          command: mvn -f ITSkillsNow/auth-service failsafe:integration-test

      - run:
          name: Test_UserService
          command: mvn -f ITSkillsNow/user-service failsafe:integration-test

  sonarcloud:
    docker:
      - image: cimg/openjdk:17.0
    parallelism: 4
    steps:
      - checkout
      - run:
          name: SonarCloud Analysis CourseService
          command: mvn -f ITSkillsNow/course-service clean verify sonar:sonar -Pcoverage -Dsonar.projectKey=Course-service -Dsonar.organization=itskillsnow -Dsonar.host.url=https://sonarcloud.io -Dsonar.login=c0601c12426c4756b514fd9ed1ea9ff3ecb2304c

      - run:
          name: SonarCloud Analysis JobService
          command: mvn -f ITSkillsNow/job-service clean verify sonar:sonar -Pcoverage -Dsonar.projectKey=Job-service -Dsonar.organization=itskillsnow -Dsonar.host.url=https://sonarcloud.io -Dsonar.login=26678f78f20da2818d5114e4fd92c17ddce384b8

      - run:
          name: SonarCloud Analysis UserService
          command: mvn -f ITSkillsNow/user-service clean verify sonar:sonar -Pcoverage -Dsonar.projectKey=User-Service -Dsonar.organization=itskillsnow -Dsonar.host.url=https://sonarcloud.io -Dsonar.login=9d4571e235b9344f2ede9fbac93160bff48d382b

      - run:
          name: SonarCloud Analysis AuthService
          command: mvn -f ITSkillsNow/auth-service clean verify sonar:sonar -Pcoverage -Dsonar.projectKey=Auth-service -Dsonar.organization=itskillsnow -Dsonar.host.url=https://sonarcloud.io -Dsonar.login=5c901e1da9cdb760528748ab4db6bf0f0fceeeec

workflows:
  ITSkillsNow_Backend:
    jobs:
      - build
      - unit_tests:
          requires:
            - build
      - integration_tests:
          requires:
            - unit_tests
      - build-and-push-course-service:
          requires:
            - integration_tests
      - build-and-push-job-service:
          requires:
            - integration_tests
      - build-and-push-user-service:
          requires:
            - integration_tests
      - build-and-push-auth-service:
          requires:
            - integration_tests
      - build-and-push-discovery-server:
          requires:
            - integration_tests
      - build-and-push-apigateway:
          requires:
            - integration_tests
      - sonarcloud:
          requires:
            - build-and-push-course-service
            - build-and-push-job-service
            - build-and-push-user-service
            - build-and-push-auth-service
            - build-and-push-discovery-server
            - build-and-push-apigateway
