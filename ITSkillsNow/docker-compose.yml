version: '3.9'

services:
  postgres:
    container_name: postgres
    image: postgres
    environment:
      POSTGRES_USER: itskillsnow
      POSTGRES_PASSWORD: password
      PGDATA: /data/postgres
    volumes:
      - postgres:/data/postgres
    ports:
      - "5433:5432"
    networks:
      - postgres

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - pgadmin:/var/lib/pgadmin
    ports:
      - "5050:80"
    networks:
      - postgres


  discovery-server:
    image: discovery-server
    container_name: discovery-server
    hostname: discovery-server
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    ports:
      - "8761:8761"
    build:
      context: ./discovery-server
      dockerfile: "Dockerfile"
    networks:
      - spring
    depends_on:
      - zipkin

  gateway:
    image: gateway
    container_name: gateway
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    ports:
      - "8080:8080"
    build:
      context: ./api-gateway
      dockerfile: "Dockerfile"
    networks:
      - spring
    depends_on:
      - discovery-server
      - zipkin

  course-service:
    image: course-service
    container_name: course-service
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    ports:
      - "8081:8081"
    build:
      context: ./course-service
      dockerfile: "Dockerfile"
    networks:
      - spring
      - postgres
      - sonarQube
    depends_on:
      - discovery-server
      - postgres
      - rabbitmq
      - zipkin

  auth-service:
    image: auth-service
    container_name: auth-service
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    ports:
        - "9898:9898"
    build:
        context: ./auth-service
        dockerfile: "Dockerfile"
    networks:
      - spring
      - postgres
    depends_on:
      - discovery-server
      - postgres
      - zipkin

  job-service:
    image: job-service
    container_name: job-service
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    ports:
      - "8082:8082"
    build:
      context: ./job-service
      dockerfile: "Dockerfile"
    networks:
      - spring
      - postgres
      - sonarQube
    depends_on:
      - discovery-server
      - postgres
      - rabbitmq
      - zipkin

  zipkin:
    image: openzipkin/zipkin
    container_name: zipkin
    ports:
      - "9411:9411"
    networks:
      - spring

  rabbitmq:
    image: rabbitmq:3.9.11-management-alpine
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - spring

  sonarqube:
    image: sonarqube:9.9.0-community
    container_name: sonarqube
    ports:
      - '9000:9000'
    networks:
      - sonarQube


networks:
  postgres:
    driver: bridge
  spring:
    driver: bridge
  sonarQube:
    driver: bridge

volumes:
  postgres:
  pgadmin: